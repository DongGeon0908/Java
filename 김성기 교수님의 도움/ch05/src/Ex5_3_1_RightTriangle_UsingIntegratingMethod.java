/**
 * [ RightTriangle_UsingIntegratingMethod ]: 
 *        '*'로 밑변이 5인 직각 삼각형 그리기(매개변수 갖는 통합 메소드 사용)
 * 
 *   o 프로그래밍 스타일 
 *     - 통합 추상화를 적용한 통합 메소드의 작성과 메소드 호출
 *     - 한 라인에 *를 매개변수에 주어진 회수만큼 출력하는 통합 메소드인 
 *           printStarInLine(int cnt) 작성 
 *     - main()에서는 주어진 개수만큼의 '*'를 한 라인에 출력하는 메소드들을 반복적으로 
 *           호출하여  '*'로  밑변이 5인 직각 삼각형 그림
 *           
 *  o 대체 메소드를 매개변수 갖는 메소드로 통합
 *    - 유사한 대체 메소드들을 매개변수 이용하여 하나로 통합
 *    - 메소드 이름에 나타난 데이터 요소를 매개변수로 작성 
 *         printStar4InLine()  ==>  printStarInLine(int  cnt)
 *         
 *    - 메소드 호출할 때 실제 매개변수 전달
 *         printStar4InLine();  ==>  printStarInLine(4);
 *         
 *   o 매개변수
 *     - 호출하는 메소드에서 호출되는 메소드로 값을 전달하는 수단
 *     - 메소드 작성할 때에는 값이 주어지지 않지만 메소드 호출할 때 값이 주어짐
 *     - 매개변수로 주어지는 값에 따라 다른 수행 결과를 낳게 됨
 *      
 *   o 매개변수의 종류
 *     - 형식매개변수(formal parameter)
 *       . 작성하는 메소드 시그니처에서 선언하는 변수
 *       . 작성할 때에는 값이 없지만 메소드 호출할 때 실매개변수 값을 전달하여 형식매개변수에 저장
 *         
 *     - 실매개변수(actual parameter)
 *       . 메소드를 호출할 때 주는 값으로, 이 값을 형식매개변수에 전달
 *       . 상수, 변수의 값 또는 수식의 계산 결과가 실매개변수가 됨
 *
 *   o 매개변수와 관련된 중요사항
 *     - 매개변수는 호출하는 메소드에서 호출되는 메소드로 정보를 전달하는 수단
 *     - 매개변수가 있는 메소드를 호출할 때에는 실매개변수를 반드시 주어야 함 
 *     - 호출된 메소드에서는 실매개변수 값을 전달받아 형식매개변수에 저장한 후 메소드를 수행 
 */

class Ex5_3_1_RightTriangle_UsingIntegratingMethod {
	public static void main(String[] args)  {	
		System.out.println("\n  ** 밑변이 '*' 5개인 직각 삼각형 그리기(매개변수 갖는 메소드 이용) **");
		
		printStarInLine(1);  // 실매개변수 1로 호출
		printStarInLine(2);  // 실매개변수 2로 호출
		printStarInLine(3);  // 실매개변수 3로 호출
		printStarInLine(4);  // 실매개변수 4로 호출
		printStarInLine(5);  // 실매개변수 5로 호출
	}

	// 매개변수를 가지는 통합된 메소드 printStarInLine(int cnt)
	//    호출할 때 주어지는 실매개변수 값이 형식매개변수 cnt에 저장되고
	//    그 개수만큼의 '*'를 한 라인에 출력
	public static void printStarInLine(int cnt) { 
		for (int i = 0; i < cnt; i++)  // '*' cnt 개 출력	
			System.out.print('*');  
		
		System.out.println();          // 줄바꿈
	}       	
}

/*
 * [ 프로그램의 이해 및 실행 ]
 * 
 *   1) 예제 5-3-1 프로그램은 예제 5-2-6 프로그램을 매개변수 갖는 통합 메소드로 작성한다.
 *  
 *   2) 예제 5-2-6 프로그램의 여러 유사한 기능의 허접한 메소드를 매개변수 갖는 통합 메소드로 재구성한다.
 *      - 특정 개수의 *를 한 라인에 출력하는 메소드들 printStarNInLine()을 통합
 *         ==> 매개변수 갖는 통합 메소드 printStarInLine(int cnt)
 *      
 *   3) main()에서는 실매개변수 1, 2, 3, 4, 5를 전달하면서 통합 메소드 호출하여
 *      밑변이 * 5개인 직각 삼각형 그린다.
 *     
 *     
 * [ 실습과제 ]
 * 
 *   1) 밑변이 '*' 10개인 직각 삼각형을 그리도록 프로그램을 수정하라.
 *      이 작업을 위해서 필요한 메소드를 호출하면 된다.
 *    
 *   2) 이 프로그램의 스타일대로 밑변이 * 50개인 직각 삼각형을 그리려면 
 *      몇 번의 메소드 호출이 필요한가?   
 *       
 *   3) printStarInLine(int cnt) 메소드를 이용하여 폭이 7, 높이가 8인 사각형을 그리는 
 *      프로그램을 Pr5_3_1_Rectangle_UsingIntegratedMethod 클래스로 작성하라.    
 */
