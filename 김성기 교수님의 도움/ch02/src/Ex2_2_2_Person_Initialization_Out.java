/**
 * [ Person_Initialization_Out ]: 신상정보를 위한 변수 선언 및 초기화, 출력
 * 
 *   o 프로그래밍 스타일 
 *     1) main() 메소드로만 클래스 구성
 *     2) 변수 선언과 동시에 초기화하여 저장된 변수 값 출력
 *  
 *   o 변수 선언 
 *     - 변수는 선언된 후 값 저장 및 변경 가능
 *     - 변수 선언 시 변수 이름과 저장할 값의 종류 나타내는 타입이 주어짐
 *     - 변수가 선언되면 선언 시의 타입 값들 중 한 값만 저장 가능
 *     
 *   o 변수 초기화
 *     - 변수를 선언하며 변수에 값 저장하는 것
 *     - 변수를 초기화할 때 선언 시의 타입의 값 중에 하나로 초기화해야 함
 *         String name = "홍길동";  // 변수 선언 및 초기화, 
 *                                 // 이는 << String name; name = "홍길동"; >>과 동일
 *         
 *   o 여러 종류별 값 출력
 *     - System.out.println() 메소드를 통해 값 출력
 *     - System.out.println()은 출력 후 줄바꿈 하여 다음 입출력이 다음 라인에서 이루어지게 함
 *     - 출력할 여러 값들을 + 로 접속하여 출력 가능
 */


class Ex2_2_2_Person_Initialization_Out {
	public static void main(String[] args) {
		/*
		 *  신상정보(이름, 나이, 현위치) 저장을 위한 변수 선언 및 초기화
		 */
		String name = "홍길동";        // 변수 초기화: 변수 선언과 값 저장이 동시에 이루어짐
		int age = 18;                 // 변수 초기화: 변수 선언과 값 저장이 동시에 이루어짐
		String currentLocation = "금강산";   // 변수 초기화: 변수 선언과 값 저장이 동시에 이루어짐

		double height = 177.7;       // 변수 초기화: 변수 선언과 값 저장이 동시에 이루어짐
		char initialOfName = 'H';    // 변수 초기화: 변수 선언과 값 저장이 동시에 이루어짐

		/*
		 *  여러 변수들의 값을 결과로 출력: +를 이용하여 여러 값을 출력 가능
		 */
		System.out.println();
		System.out.println("  ** " + name + "의 신상정보 ** ");
		System.out.println();
		System.out.println("  * " + name + "의 나이는 " + age + "세이고 "  + currentLocation  + "에 있음");
		System.out.println("  * " + name + "의 키는 " + height + "cm이고 이름 첫 글자는 " + initialOfName  + "임");
		
		System.out.println("\n  ^^ Well done! Have a good time!!! ^^\n"); // 이 문장은 프로그램 종료를 나타내는 문장		
	}
} 

/*
 * [ 프로그램의 이해 및 실행 ]
 *
 *   1) 주어진 프로그램 살펴보고 프로그램의 내용 파악하라.
 *   
 *      - Ex2_2_2_Person_Initialization_Out 클래스가 선언되어 있으며, 
 *        클래스 내부에 main() 메소드 작성
 *       
 *      - main() 메소드는 이름, 나이, 현위치, 키, 이름 첫 글자 저장을 위한 변수 선언하며
*         바로 "홍길동", 18, "금강산", 177.7, 'H' 값으로 초기화한 후 출력
 *           
 *   2) 이 프로그램과 Ex2_1_1_Person_Out 프로그램의 차이점이 무엇인지 확실히 이해하라.
 *   
 *   3) 프로그램 실행하여 결과 확인하라.
 *   
 *   4) 이몽룡의 상황에 대해 변수 초기화 값 변경하고 실행하여 결과 확인하라.
 *      (이몽룡의 정보는 춘향전을 최대한 참고하여 적절히 설정함) 
 *   
 *   5) 본인의 이름, 나이, 키, 이름 첫 글자, 한국인 여부, 현위치를 저장할 변수들 
 *      추가적으로 선언하며 자신의 상황에 맞는 값으로 초기화한 후 출력하도록 프로그램 변경하라.
 *      
 *      (필요한 변수를 기존의 변수 이름 앞에 my를 붙인 변수로 선언하고, main() 끝 부분에 작성)
 *      
 *   6) 외국인 한 사람을 설정하여 5)의 작업 수행해보라.
 *      
 *   
 * [ 실습과제 ]
 *  
 *   o 본인이 좋아하는 책의 제목, 저자, 출판사, 가격, 페이지수 등의 책 정보 저장하기
 *     위한 변수들을 각각 선언하며 면각 변수를 초기화한 후 출력하는 프로그램을
 *     Pr2_2_2_Book_Initialization_Out 클래스로 작성하라.
 *      
 *     (변수 이름은 영어 단어로 작성할 것이며, 영어 단어를 모르면 인터넷 한영사전을 
 *      참조하라. 책 정보는 인터넷 서점에서 정확한 정보를 구하여 변수에 저장할 것)
 *        
 *  
 * [ 참고사항 ]
 *   
 *   1) 실습과제를 할 때에는 이 클래스의 프로그래밍 스타일과 동일한 스타일의 프로그램을 
 *      작성하여야 한다. 
 *      
 *      예를 들어, 실습과제 5)의 Pr2_2_2_Book_Initialization_Out 클래스에서
 *      책 정보를 출력할 때 main() 메소드로만 클래스 구성하고, 변수를 선언하며 초기화한 후
 *      출력하여야 한다.
 *      
 *   2) 새로 작성되는 프로그램이 1장 실습과제에서 작성된 프로그램과 유사할 경우에는 
 *      1장 실습과제에서 작성한 프로그램을 복사하여 변경하여도 되지만
 *      1장 실습과제에서 작성된 프로그램은 무시하고 새롭게 작성하는 것을 권장함
 *
 *   3) Eclipse에서도 복사 및 붙여넣기 기능을 제공하며, 붙여넣기한 클래스는 새로운 클래스 이름으로 
 *      저장하면 된다. 클래스 복사 및 붙여넣기 과정은 다음과 같다.
 *     
 *      복사할 프로젝트의 (default package)에서 복사할 클래스를 클릭 -> 마우스 오른쪽 버튼 클릭 
 *        -> Copy -> 붙여넣기할 프로젝트의 (default package) 클릭 -> 마우스 오른쪽 버튼 클릭 
 *        -> Paste -> 붙여넣기할 클래스에 대한 새로운 이름 입력 -> OK 버튼 클릭
 *        -> (default package)에 새로운 붙여넣기한 클래스가 생성
 *        -> 생성된 클래스 더블 클릭 -> 클래스의 내용 확인 후 변경
 *     
 *   
 * [ 스스로 생각하고 고민할 과제 ]  
 *   
 *    1) Ex2_2_2_Person_Out 클래스의 변수 초기화 하지 않는 프로그램과 초기화 하는 
 *       이 프로그램을 비교해보라. 각 프로그램의 장단점이 무엇인지 고민해보라.  
 *       
 *    2) 책 제목을 저장할 변수의 경우 title, titleOfBook, bookTitle 등에서 하나 결정하여야 한다. 
 *       어떠한 이름이 가장 좋은 변수 이름이 될 것인지 다시 한번 생각해보라.     
 */
