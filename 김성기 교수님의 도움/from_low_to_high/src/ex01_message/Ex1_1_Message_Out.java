package ex01_message;

/*
 *  [ Message_Out ]: 문자열 메시지 출력
 * 
 *   o 프로그래밍 스타일 
 *     1) main() 메소드로만 클래스 구성
 *     2) 변수를 사용하지 않고서 문자열을 직접 출력
 *  
 *   o 문자열 출력을 위한 프로그램 작성 및 수정
 *     - 처음 작성하는 이 프로그램에서는 문자열을 직접 출력함 
 *     - 문자열은 이중 따옴표(") 사이에 나열되는 문자들로서,
 *         Java에서 가장 중요하게 활용되는 값임
 *     - 예) "I made First Java Program.",
 *           "자바 프로그램 전문가가 될 것이다."

 *     - System.out.println() 메소드를 이용하여 문자열을 출력
 */

class Ex1_1_Message_Out {   

	// main() 메소드는 시작 메소드로 자동적으로 호출됨
	public static void main(String[] args) {       
		System.out.println("I made first Java program.");  
		System.out.println("자바 프로그램 전문가가 될 것이다.");  
		
		// 이 부분에서 3) 본인이 좋아하는 격언을 추가로 출력하라
		
		// 이 부분에서 4) 오늘의 날짜와 시간을 출력하라
		
		// 이 부분에서 5) System.out.println()을 한번씩 사용하여 
		//    본인의 이름, 나이, 현위치를 출력하라
	}  

} 

/*
 * [ 프로그램의 이해 및 실행 ]
 *
 *   1) 주어진 프로그램을 살펴보고 프로그램의 구조를 파악하라.
 *   
 *      class 다음에 Ex1_1_Message_Out 클래스가 선언되어 있으며, 
 *      클래스 내부에 main() 메소드가 작성되어 있다. 
 *      
 *      < public static void main(String[] args) >로 시작되는 main() 메소드는
 *      Java 프로그램이 수행되면 지동적으로 시작되는 메소드인 출발 메소드이다.
 *      
 *      main() 메소드는 문자열 "I made First Java Program.", 
 *      "자바 프로그램 전문가가 될 것이다."를 출력하는 2 문장으로 되어있다.
 *       
 *   2) 프로그램을 실행하여 결과를 확인하라.
 *   
 *   3) 본인이 좋아하는 격언을 추가로 출력하도록 수정한 후 실행하여 결과를 확인하라. 
 *   
 *   4) 오늘의 날짜와 시간을 추가로 출력하도록 수정한 후 실행하여 결과를 확인하라.
 *   
 *   5) System.out.println()을 한번씩 사용하여 본인의 이름, 나이, 현위치를  
 *      출력하도록 수정한 후 실행하여 결과를 확인하라.
 *      
 *      
 * [ 실습과제 ]
 *
 *   1) 본인이 좋아하는 영화 정보를 하나의 문자열로 구성하고 이를 출력하는 
 *      프로그램을 Pr1_1_MovieInfo_Out 클래스로 작성하라.
 *      (출력할 영화 정보는 본인이 결정할 것임)
 *  
 *   2) 본인이 좋아하는 책의 제목, 저자, 출판사, 가격, 페이지수 등의 책 정보를 
 *      하나의 문자열로 구성하고 이를 출력하는 프로그램을 Pr1_1_BookInfo_Out 클래스로 
 *      작성하라. 
 *      (책 정보는 인터넷 서점에서 찾아 출력할 것임)        
 *
 *      
 * [ 참고사항 ]
 *
 *   1) Java의 클레스 이름은 전체 프로그램의 기능을 나타내도록 명명되어야 한다.
 *      
 *      실습자료에서 사용된 클래스 이름은 실습 week 번호, week 번호에서의 순서번호, 클래스의 전체 기능을 
 *      나타내도록 명명된다. 예를 들어, Ex1_1_Message_Out 클래스 이름의 경우, 
 *      Ex1_1은 실습 1 week에서 첫번째 작성된 클래스를 나타내고, Message_Out은 
 *      "메시지 출력"이라는 전체 기능을 나타낸다.
 *      
 *      앞으로 제시되는 모든 클래스는 Ex 다음에 실습 week 번호, 실습 week 번호에서의 순서번호,
 *      클래스의 전체 기능을 나타내도록 명명되어 질 것이다.
 *      
 *      실습과제에서 작성될 클래스는 Pr 다음에 실습 week 번호, 실습 week 번호에서의 순서번호,
 *      클래스의 전체 기능을 나타내도록 명명되어 질 것이다.
 *      
 *      한편, 클래스 이름의 첫 글자는 영문 대문자로 시작하고, 두번째 글자부터 
 *      숫자, _ 또는 $ 등이 사용될 수 있다. 
 *      
 *      여러 단어를 결합하여 클래스 이름을 명명할 경우에는 각 단어는 대문자로
 *      시작하는 것이 기본 원칙이다.   
 *   
 *   2) /* 부터 시작하는 부분과 //로 시작하는 부분은 주석(comment)로, 
 *      프로그램의 수행에 영향을 미치지 않는다.
 *   
 *   
 *   3) 새로운 Pr1_1_BookInfo_Out 클래스를 작성하기 위한 과정은 다음과 같다.
 *   
 *      Eclipse의 File -> New -> Class -> 클래스 생성 창이 뜨면 
 *         1) name 입력 부분에 Pr1_1_BookInfo_Out 입력
 *         2) < □ public static void main(String[] args) >의 체크박스 체크
 *      -> Finish 버튼 클릭 -> 새로운 클래스 생성 확인
 *      -> 클래스 작성 시작
 *     
 *   4) 실습과제를 할 때에는 이 클래스의 프로그래밍 스타일과 동일한 스타일의 
 *      프로그램을 작성하여야 한다. 예를 들어, Pr1_1_BookInfo_Out 클래스에서
 *      책 정보를 출력할 때, main() 메소드로만 클래스 구성하고 책 정보를 나타내는 
 *      문자열을 직접 출력하여야 한다.
 *      
 *      다른 스타일을 사용하여 작성할 수 있지만, 본서에서는 다양한 스타일을 차례대로 
 *      익히면서 Java 프로그래밍에 대한 체계적이며 심도있는 이해를 목표로 하므로 
 *      반드시 따르기를 권장한다.          
 */
