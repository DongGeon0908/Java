/**
 * [ ScoresInSum_UsingFor ]: 배열에 10명의 점수 입력하며 합 구해 출력하기    
 *             
 *   o for 문
 *     - 기능: 반복 제어변수 이용하여 반복 회수 제어하는 대표적인 반복문
 *     - 구성: 반복 제어변수 초기화, 반복조건 검사, 제어변수 변경, 반복 수행될 문장 등 4 부분
 *     - 수행방법: 반복조건이 true인 동안 반복 수행될 문장을 계속 수행
 *     - 반복 제어변수 선언: for 문 외부 또는 내부에서 선언 가능
 *     - for 문 외부에서 선언한 반복 제어변수: for 문 내부와 외부에서 사용 가능하며, 
 *                                       for 문이 종료된 후에도 사용 가능함 
 *     - for 문 내부에서 선언한 반복 제어변수: for 문 내에서만 사용 가능 
 *      
 *   o for 문의  반복 수행할 문장이 2개 이상
 *     - 반복 수행할 문장이 2개 이상인 경우에는 반드시 여러 문장을 블록으로 만들어야 함
 *    
 *     - 반복 수행할 문장이 2개 이상인데 블록으로 작성하지 않으면 첫번째 문장만 반복 수행할 문장이 됨
 */

class Ex4_3_04_ScoresInSum_UsingFor {
	public static void main(String[] args)  {
		System.out.println("\n  ** 10명의 점수를 입력하며 합을 구해 출력하기 **\n  ");


		int[] scores = new int[10]; // 10개의 원소 저장할 배열객체를 scores 배열에 저장
		int sum = 0;                // 점수들을 누적시켜 합 구할 때 반드시 0으로 초기화해야 함

		for (int i = 0; i < 10; i++) 
			scores[i] = SkScanner.getIntWithPrompt("  * " + (i + 1) + "번째 점수 > ");
		    sum = sum + scores[i];
		    
		System.out.println("\n  o 10명의 점수 합 = " + sum); 
	}
}

/*
 * [ 프로그램의 이해 및 실행 ]
 *   
 *   1) 이 프로그램은 오류가 있다. 오류 발생한 문장 왼쪽의 붉게 표시된 x에 
 *      마우스 커서를 위치하여 오류 메시지 확인하라.
 *      
 *   2) 오류의 원인이 무엇인가 파악하고 오류를 제거하도록 프로그램 수정하라.
 *      (반복 수행할 문장이 2 문장 이상인 경우 반드시 블록으로 만들어야 함)
 *   
 *   3) 프로그램을 실행하여 결과를 확인하라.
 *   
 *   4) 이 프로그램의 반복 제어변수 i를 for 문 외부에서 선언할 경우 
 *      오류 생성 여부와 결과를 확인하라.
 *      (이 경우 컴파일 오류는 발생하지 않으나 값을 입력한 후 오류가 발생함)
 */
