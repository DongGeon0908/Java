/**
 * [ 2DimensionArray ]: 2차원 배열의 선언, 원소에 값 저장, 원소 접근
 * 
 *   o 프로그래밍 스타일 
 *     1) main() 메소드로만 클래스 구성
 *     2) 2차원 배열변수 선언, 2차원 배열 원소 저장 및 원소 접근
 *  
 *   o 2차원 배열변수 선언 및 2차원 배열객체 저장
 *     - 원소타입[][] 배열변수명 = new 원소타입[행개수][열개수];
 *     
 *     - int[][] scores = new int[4][6];   // 4명 학생의 6 과목 점수 저장하는 2차원 배열
 *     - String][] names = new String[3][4] // 3개 소설의 주인공 이름 4개씩 저장하는 2차원 배열
 *     
 *   o 2차원 배열 원소에 값 저장
 *     - 배열변수명[행_인덱스][열_인덱스] = 저장할_값;
 *     
 *     - scores[0][0] = 90; // 첫 번째 학생 첫 번째 점수에 90을 저장
 *     - scores[0][1] = 92; // 첫 번째 학생 두 번째 점수에 92를 저장
 *     - names[0][0] = "성춘향";
 *     
 *   o 2차원 배열 원소 접근
 *     - 배열변수명[행_인덱스][열_인덱스] 자체가 원소 값을 나타냄
 *     
 *     - int score = scores[0][0];   // 첫 번째 학생 첫 번째 점수를 score에 저장
 *     - int sum = scores[0][1] + scores[1][1] + scores[2][1] + scores[3][1]; // 두 번째 과목의 점수 합 구하기
 *     - String name = names[0][0]; 
 *              
 *   o 2차원 배열 원소에 입력한 값 저장              
 *     - 입력한 값을 배열 원소에 저장: 배열변수명[행인덱스][열인덱스] = SkScanner.getXxx();
 *     
 *     - scores[0][0] = SkScanner.getInt();   // 점수 입력하여 인덱스 (0, 0) 위치의 원소에 저장 
 *     - names[1][1] = SkScanner.getString(); // 이름 입력하여 인덱스 (1, 1) 위치의 원소에 저장  
 *             
 *   o 중첩 for 문을 이용하여 모든 원소를 차례로 저장 및 접근  
 *                                           
 */ 

class Ex4_4_6_2DimensionArray {
	public static void main(String[] args) {   
		int[][] scores = new int[4][6]; // 4명 학생 점수 6개 저장하는 2차원 배열 

		scores[0][0] = 90;           // 첫 번째 학생 첫 번째 점수에 90을 저장
		scores[0][1] = 92;           // 첫 번째 학생 두 번째 점수에 92를 저장
		scores[3][4] = 85;           // 네 번째 학생 다섯 번째 점수에 85를 저장  
		int score = scores[0][0];    // 첫 번째 학생의 첫 번째 점수를 score에 저장

		scores[3][5] = SkScanner.getInt("  o (3, 5) 원소에 점수 입력 > ");    // 점수 입력하여 네 번째 학생 다섯 번째에 저장
		System.out.println("  * (3, 5) 원소에 입력된 점수: " + scores[3][5]); // 인덱스가 (3, 5)인 원소의 점수 출력

		String[][] names = new String[3][3]; // 3 소설 주인공 이름 3개 저장하는 2차원 배열 
				
		names[0][0] = "성춘향";    // 인덱스가 (0, 0)인 원소에 "성춘향" 저장 
		names[1][0] = "심청";      // 인덱스가 (1, 0)인 원소에 "심청" 저장 
		
		names[1][1] = SkScanner.getString("\n  o 심청전 두번째 주인공 입력 > ");   // 이름 입력하여 인덱스가 (1, 1)인 원소에 저장		 
		System.out.println("  * 입력된 심청전 두번째 주인공: " + names[1][1]);      // 인덱스가 (1, 1)인 원소의 이름 출력
	}
}

/*
 * [ 프로그램의 이해 및 실행 ]
 *   
 *   1) 이 프로그램은 2차원 배열의 선언, 원소에 값 저장, 원소 접근 등을 보여준다.
 *      
 *   2) 프로그램을 실행하고 결과를 확인하라.
 *   
 *   3) scores[4][0], scores[3][6] 등 인덱스 범위를 벗어나는 원소를 접근하면 어떠한 일이 발생하는가를 확인하라.
 *      (배열의 인덱스 범위는 0부터 (개수-1)까지임)  
 *   
 *   
 * [ 실습과제 ]
 * 
 *   o 학생 4명에 대해 1학년부터 3학년까지의 키를 측정한 데이터를 저장하려 한다.
 *   
 *     (1) 이를 위한 2차원 배열변수를 선언하고 배열객체를 생성하여 배열변수에 저장하는 프로그램 코드를 작성하라.
 *      
 *     (2) 첫번째 학생의 1학년 키에 168.4, 3번째 학생의 3학년 키에 171.3을 저장하는 프로그램 코드를 작성하라.
 *      
 *     (3) 두번째 학생의 2학년 키를 입력하여 저장하고 저장된 값을 출력하는 프로그램 코드를 작성하라.
 */
